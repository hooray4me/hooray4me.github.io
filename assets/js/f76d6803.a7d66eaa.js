"use strict";(self.webpackChunksource=self.webpackChunksource||[]).push([[883],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},c=Object.keys(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},y=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,c=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=l(r),y=a,m=p["".concat(s,".").concat(y)]||p[y]||f[y]||c;return r?n.createElement(m,i(i({ref:t},u),{},{components:r})):n.createElement(m,i({ref:t},u))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var c=r.length,i=new Array(c);i[0]=y;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[p]="string"==typeof e?e:a,i[1]=o;for(var l=2;l<c;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}y.displayName="MDXCreateElement"},4338:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>c,metadata:()=>o,toc:()=>l});var n=r(7462),a=(r(7294),r(3905));const c={sidebar_position:4},i="Create/Update certificate",o={unversionedId:"configurations/create-certificate",id:"configurations/create-certificate",title:"Create/Update certificate",description:"Create or update the certificate used by istio.",source:"@site/docs/configurations/create-certificate.md",sourceDirName:"configurations",slug:"/configurations/create-certificate",permalink:"/configurations/create-certificate",draft:!1,editUrl:"https://github.com/hooray4me/hooray4me.github.io/tree/master/docs/configurations/create-certificate.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Vault Setup",permalink:"/configurations/vault-setup"},next:{title:"Other Info",permalink:"/category/other-info"}},s={},l=[{value:"Extract the .key file from the .pfx file",id:"extract-the-key-file-from-the-pfx-file",level:2},{value:"Decrypt the .key file",id:"decrypt-the-key-file",level:2},{value:"Extract the .crt file from .pfx file",id:"extract-the-crt-file-from-pfx-file",level:2},{value:"Extract the cacerts from .pfx file",id:"extract-the-cacerts-from-pfx-file",level:2},{value:"Combine certificate and ca certs",id:"combine-certificate-and-ca-certs",level:2},{value:"Create a secret in your Kubernetes cluster",id:"create-a-secret-in-your-kubernetes-cluster",level:2},{value:"Verify that your new secret exists in your clusters namespace",id:"verify-that-your-new-secret-exists-in-your-clusters-namespace",level:2},{value:"Update your Ingress tls to match your new secret",id:"update-your-ingress-tls-to-match-your-new-secret",level:2},{value:"Apply using continuous deployment or manually using",id:"apply-using-continuous-deployment-or-manually-using",level:2},{value:"Test your new https host (wait five minutes after deploy)",id:"test-your-new-https-host-wait-five-minutes-after-deploy",level:2}],u={toc:l};function p(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"createupdate-certificate"},"Create/Update certificate"),(0,a.kt)("p",null,"Create or update the certificate used by istio."),(0,a.kt)("h2",{id:"extract-the-key-file-from-the-pfx-file"},"Extract the .key file from the .pfx file"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"openssl pkcs12 -in pfx-filename.pfx -nocerts -out key-filename.key\n")),(0,a.kt)("h2",{id:"decrypt-the-key-file"},"Decrypt the .key file"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"openssl rsa -in key-filename.key -out key-filename-decrypted.key\n")),(0,a.kt)("h2",{id:"extract-the-crt-file-from-pfx-file"},"Extract the .crt file from .pfx file"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"openssl pkcs12 -in pfx-filename.pfx -clcerts -nokeys | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' > crt-filename.crt\n")),(0,a.kt)("h2",{id:"extract-the-cacerts-from-pfx-file"},"Extract the cacerts from .pfx file"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"openssl pkcs12 -in pfx-filename.pfx -cacerts -nokeys -chain | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' > cacerts.cer\n")),(0,a.kt)("h2",{id:"combine-certificate-and-ca-certs"},"Combine certificate and ca certs"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"cat crt-filename.crt cacerts.cer > combined_cert.pem\n")),(0,a.kt)("h2",{id:"create-a-secret-in-your-kubernetes-cluster"},"Create a secret in your Kubernetes cluster"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"kubectl create secret tls your-secret-name --cert combined_cert.pem --key key-filename-decrypted.key\nkubectl create secret tls ingress-cert -n istio-ingress --cert combined_cert.pem --key key-filename-decrypted.key\n")),(0,a.kt)("h2",{id:"verify-that-your-new-secret-exists-in-your-clusters-namespace"},"Verify that your new secret exists in your clusters namespace"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"kubectl get secret -n istio-ingress\n")),(0,a.kt)("h2",{id:"update-your-ingress-tls-to-match-your-new-secret"},"Update your Ingress tls to match your new secret"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"kind: Ingress\nmetadata:\n  name: your-ingress\nspec:\n  tls:\n  - secretName: your-secret-name      \n  - hosts: \n    - your-host-name.com\n")),(0,a.kt)("h2",{id:"apply-using-continuous-deployment-or-manually-using"},"Apply using continuous deployment or manually using"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"kubectl apply -f your-ingress.yml\n")),(0,a.kt)("h2",{id:"test-your-new-https-host-wait-five-minutes-after-deploy"},"Test your new https host (wait five minutes after deploy)"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"curl -v https://your-host-name.com\n")))}p.isMDXComponent=!0}}]);